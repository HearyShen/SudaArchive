/*********************************
	LLparser 非递归语法分析器
	1427405017
	沈家赟
**********************************/
#include <iostream>
#include <sstream>
#include <fstream>
#include <stack>

#define MAX_LENGTH 100

using namespace std;

int rule[][6]={{0},{129,130,26,0},{1,34,28,0},{131,134,138,150,0}, 
	{2,132,133,28,0},{0},{34,20,33,0},{27,132,133,0},{3,135,136,0}, 
	{34,147,29,137,28,0},{27,34,147,0},{135,136,0},{4,0},{5,0}, 
	{139,130,28,140,0},{6,34,158,28,0},{142,0},{144,0},{145,0},{146,0}, 
	{148,0},{150,0},{34,143,0},{30,153,0},{7,152,8,141,0},{9,152,10,141,0}, 
	{11,31,34,147,32,0},{12,31,153,149,32,0},{27,153,149,0}, 
	{13,141,151,14,0},{28,141,151,0},{153,161,153,0},{15,153,0}, 
	{16,155,154,0},{17,155,154,0},{155,154,0},{159,155,154,0}, 
	{157,156,0},{160,157,156,0},{34,0},{33,0},{31,153,32,0}, 
	{26,33,0},{16,0},{17,0},{18,0},{19,0},{20,0},{21,0},{22,0}, 
	{23,0},{24,0},{25,0},{31,34,29,137,32,0}}; 

int table[34][35]; 

/*
( pretable entry {非终结符, 终结符, rule} )
*/
int pretable[][3]={{128,1,1},{129,1,2},{130,2,3},{130,3,3}, 
	{130,6,3},{130,34,3},{130,7,3},{130,9,3},{130,11,3}, 
	{130,12,3},{130,13,3},{130,26,3},{130,28,3},{131,2,4}, 
	{131,3,5},{131,6,5},{131,34,5},{131,7,5},{131,9,5},{131,11,5}, 
	{131,12,5},{131,13,5},{131,26,5},{131,28,5},{132,34,6}, 
	{133,27,7},{133,28,5},{134,3,8},{134,6,5},{134,34,5},{134,7,5}, 
	{134,9,5},{134,11,5},{134,12,5},{134,13,5},{134,26,5}, 
	{134,28,5},{135,34,9},{136,6,5},{136,13,5},{136,34,11},{136,28,5},{137,4,12}, 
	{137,5,13},{138,6,14},{138,34,5},{138,7,5},{138,9,5}, 
	{138,11,5},{138,12,5},{138,13,5},{138,26,5},{138,28,5}, 
	{139,6,15},{140,6,14},{140,34,5},{140,7,5},{140,9,5}, 
	{140,11,5},{140,12,5},{140,13,5},{140,26,5},{140,28,5}, 
	{141,34,16},{141,7,17},{141,9,18},{141,11,19},{141,12,20}, 
	{141,13,21},{141,14,5},{141,26,5},{141,28,5},{142,34,22}, 
	{143,30,23},{143,31,41},{143,28,5}, 
	{143,28,5},{143,14,5},{143,26,5},{143,14,5}, 
	{144,7,24},{145,9,25},{146,11,26},{147,27,10}, 
	{147,29,5},{147,32,5},{148,12,27},{149,27,28},{149,32,5}, 
	{150,13,29},{150,26,5},{150,28,5},{151,28,30},{151,14,5}, 
	{151,26,5},{151,28,30},{152,34,31},{152,16,31},{152,17,31}, 
	{152,34,31},{152,33,31},{152,31,31},{152,15,32},{153,34,35}, 
	{153,16,33},{153,17,34},{153,34,35},{153,33,35},{153,31,35}, 
	{154,16,36},{154,17,36},{154,8,5},{154,10,5},{154,14,5}, 
	{154,20,5},{154,21,5},{154,22,5},{154,23,5},{154,24,5}, 
	{154,25,5},{154,26,5},{154,27,5},{154,28,5},{154,32,5}, 
	{155,34,37},{155,33,37},{155,31,37},{156,18,38},{156,19,38}, 
	{156,8,5},{156,10,5},{156,14,5},{156,16,5},{156,17,5}, 
	{156,20,5},{156,21,5}, 
	{156,22,5},{156,23,5},{156,24,5},{156,25,5},{156,26,5}, 
	{156,27,5},{156,28,5},{156,32,5},{157,34,39},{157,33,40}, 
	{157,31,41},{158,31,53},{158,28,5}, 
	{159,16,43},{159,17,44},{160,18,45}, 
	{160,19,46},{161,20,47},{161,21,48},{161,22,49},{161,23,50}, 
	{161,24,51},{161,25,52},{0,0,0}}; 

///*预测分析决策表table*/ 
//while(pretable[i][0]) 
//{
//	table[pretable[i][0]-128][pretable[i][1]]=pretable[i][2]; 
//	i++;
//}; 

int getRule(int x, int a)
{
	int i=0;
	while( pretable[i][0] != NULL)
	//while( i<= 200)
	//while( i<= sizeof(pretable)/3/4)
	{
		if( pretable[i][0]==x && pretable[i][1]==a )
		{
			return pretable[i][2];	// if exists, return rule id
		}
		i++;
	}
	return -1;	// if not exists, return -1
}

void error()
{
	cerr<<"ERROR: 句法分析匹配失败！"<<endl;
	exit(0);
}

void main()
{
	/* 读取文件 */
	string url = "demo.mid";
	cout<<"******"<<" reading file: "<<url<<" ******"<<endl;
	fstream fin(url);
	if( fin == NULL )
	{
		cerr<<"ERROR! can't open the file: "<<url<<endl;
		exit(0);
	}
	int words[MAX_LENGTH];
	string t_str;
	int t_int;

	int i=0;
	while( fin>>t_str>>t_int )
	{
		words[i++] = t_int;
		cout<<t_str<<"  "<<t_int<<endl;
	}
	words[i] = '#';	// 结尾补#，否则无法正常完成语法匹配
	cout<<"***********************************"<<endl<<endl;

	/* LLparser 算法部分 */
	cout<<"***********************************"<<endl;
	cout<<"LLparser running..."<<endl;
	stack<int> X;
	X.push('#');
	X.push(128);			// <程序>入栈
	i=0;
	int a = words[i];	// 取一输入符号a
	while( !X.empty() )
	{
		int x = X.top();
		X.pop();
		//cout<<"matching: "<<x<<endl;
		if( x >= 128)		// x是非终结符？（非终结符内码>=128）
		{
			int ruleid = getRule(x, a);
			if( ruleid != -1 )	// M[x,a]存在规则？
			{
				int rule_i = 5;
				cout<<"M["<<x<<" ,"<<a<<"]  rule:"<<ruleid<<" -> ";
				for(int i=0; rule[ruleid][i]!=NULL; i++)
				{
					cout<<" "<<rule[ruleid][i];
				}
				cout<<endl;
				while( rule_i >= 0 )
				{
					if( rule[ruleid][rule_i] != NULL )
					{
						X.push(rule[ruleid][rule_i]);
					}
					rule_i--;
				}
			}
			else
			{
				cerr<<"can't find rule for x:"<<x<<" a:"<<a<<endl;
				error();
			}
		}
		else
		{
			if( (x>=1&&x<=35) || x=='#')	// x是终结符或#？ - 事实上'#'ASCII就是35，同内码
			{
				if( x==a )	// x=a ?
				{
					if( x=='#' )	// x=# ?
					{
						cout<<"****************"<<endl;
						cout<<endl<<"Success!"<<endl<<endl;
						cout<<"****************"<<endl;
					}
					else
					{
						cout<<"x:"<<x<<" a:"<<a<<" matched"<<endl;
						a = words[++i];	// 取下一输入符号a
						if( 1<=a && a<=35)
							continue;
						else
						{
							error();
						}
					}
				}
				else
				{
					error();
				}
			}
			else
			{
				error();
			}
		}
	}
}